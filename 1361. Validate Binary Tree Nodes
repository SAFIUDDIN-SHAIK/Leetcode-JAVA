class Solution {

  public boolean validateBinaryTreeNodes(int n, int[] leftChild, int[] rightChild) {

    int[] l = new int[n];
    int start = -1;

    for (final int i : leftChild)

      if (i != -1 && ++l[i] == 2)

        return false;

    for (final int i : rightChild)

      if (i != -1 && ++l[i] == 2)

        return false;

    for (int i = 0; i < n; ++i)

      if (l[i] == 0)

        if (start == -1)

          start = i;

        else

          return false;

    if (start == -1)

      return false;

    return func(start, leftChild, rightChild) == n;

  }

  private int func(int start, int[] leftChild, int[] rightChild) {

    if (start == -1)

      return 0;

    return 1 + func(leftChild[start], leftChild, rightChild) + func(rightChild[start], leftChild, rightChild);
  }

}
