class Class {

  public int i;
  public int j;
  public int res; // nums1[i] + nums2[j]

  public Class(int i, int j, int res) {

    this.i = i;
    this.j = j;
    this.res = res;

  }

}

class Solution {

  public List<List<Integer>> kSmallestPairs(int[] nums1, int[] nums2, int k) {

    List<List<Integer>> ans = new ArrayList<>();
    Queue<Class> l = new PriorityQueue<>((a, b) -> a.res - b.res);

    for (int i = 0; i < k && i < nums1.length; ++i)

      l.offer(new Class(i, 0, nums1[i] + nums2[0]));

    while (!l.isEmpty() && ans.size() < k) {

      final int i = l.peek().i;
      final int j = l.poll().j;
      ans.add(Arrays.asList(nums1[i], nums2[j]));

      if (j + 1 < nums2.length)

        l.offer(new Class(i, j + 1, nums1[i] + nums2[j + 1]));

    }

    return ans;

  }

}
